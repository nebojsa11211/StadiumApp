@using Microsoft.AspNetCore.Components.Web
@namespace StadiumDrinkOrdering.Admin.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />

    <!-- Admin Design System CSS -->
    <link href="css/admin-design-system.css" rel="stylesheet" />
    <link href="css/admin-layout.css" rel="stylesheet" />
    <link href="css/admin-components.css" rel="stylesheet" />
    <link href="css/admin-utilities.css" rel="stylesheet" />
    <link href="css/admin-charts.css" rel="stylesheet" />
    <link href="css/admin-animations.css" rel="stylesheet" />
    <link href="css/admin-theme-dark.css" rel="stylesheet" />
    <link href="css/admin-dashboard.css" rel="stylesheet" />

    <!-- Legacy CSS -->
    <link href="css/site.css" rel="stylesheet" />
    <link href="css/auth.css" rel="stylesheet" />
    <link href="StadiumDrinkOrdering.Admin.styles.css" rel="stylesheet" />
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    @RenderBody()

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>
    <script src="https://kit.fontawesome.com/your-kit-id.js" crossorigin="anonymous"></script>
    <script src="~/js/analytics.js"></script>
    <script src="~/js/stadium.js"></script>
    <script src="~/js/stadium-viewer.js"></script>
    <script src="~/js/datagrid.js"></script>
    <script src="~/js/culture.js"></script>
    <script src="~/js/console-interceptor.js"></script>
    <script src="~/js/modals.js"></script>
    <script src="~/js/admin-theme.js"></script>
    <script src="~/js/admin-charts.js"></script>

    <!-- Inline Modal Functions as Fallback -->
    <script>
        // Ensure modal functions are available
        window.addEventListener('DOMContentLoaded', function() {
            console.log('🔍 DOM loaded, checking modal functions...');

            // Fallback modal function if modals.js fails to load
            if (typeof window.showBootstrapModal === 'undefined') {
                console.log('⚠️ showBootstrapModal not found, creating fallback...');

                window.showBootstrapModal = function(modalId) {
                    console.log('🔍 Fallback showBootstrapModal called with:', modalId);

                    const modalElement = document.getElementById(modalId);
                    if (!modalElement) {
                        console.error('❌ Modal element not found:', modalId);
                        alert('Modal element not found: ' + modalId);
                        return;
                    }

                    if (typeof bootstrap === 'undefined') {
                        console.error('❌ Bootstrap is not loaded');
                        alert('Bootstrap is not loaded');
                        return;
                    }

                    try {
                        console.log('🔍 Creating Bootstrap modal...');
                        const modal = new bootstrap.Modal(modalElement, {
                            backdrop: true,
                            keyboard: true,
                            focus: true
                        });
                        console.log('✅ Modal created, showing...');
                        modal.show();

                        setTimeout(() => {
                            console.log('🔍 Modal visibility check:', modalElement.classList.contains('show'));
                        }, 500);
                    } catch (error) {
                        console.error('❌ Error showing modal:', error);
                        alert('Error showing modal: ' + error.message);
                    }
                };

                window.forceShowModal = function(modalId) {
                    console.log('🔍 forceShowModal called:', modalId);

                    const modalElement = document.getElementById(modalId);
                    if (!modalElement) {
                        console.error('❌ Modal not found');
                        return false;
                    }

                    // Try Bootstrap method
                    if (typeof bootstrap !== 'undefined') {
                        try {
                            const modal = bootstrap.Modal.getOrCreateInstance(modalElement);
                            modal.show();
                            return true;
                        } catch (e) {
                            console.error('❌ Bootstrap method failed:', e);
                        }
                    }

                    // Try manual method
                    try {
                        modalElement.style.display = 'block';
                        modalElement.classList.add('show');
                        modalElement.setAttribute('aria-hidden', 'false');
                        document.body.classList.add('modal-open');

                        // Add backdrop
                        let backdrop = document.querySelector('.modal-backdrop');
                        if (!backdrop) {
                            backdrop = document.createElement('div');
                            backdrop.className = 'modal-backdrop fade show';
                            document.body.appendChild(backdrop);
                        }
                        return true;
                    } catch (e) {
                        console.error('❌ Manual method failed:', e);
                        return false;
                    }
                };
            } else {
                console.log('✅ showBootstrapModal already loaded from modals.js');
            }

            console.log('✅ Modal functions ready');
        });
    </script>
</body>
</html>
