@if (IsVisible)
{
    <div class="progress-container @Size.ToLower()">
        @if (!string.IsNullOrEmpty(Label))
        {
            <div class="progress-label">
                <span>@Label</span>
                @if (ShowPercentage)
                {
                    <span class="progress-percentage">@($"{Value:F0}%")</span>
                }
            </div>
        }
        <div class="progress-bar-container">
            <div class="progress-bar-track">
                <div class="progress-bar-fill @Color.ToLower()" style="width: @($"{Value}%")">
                    @if (Animated)
                    {
                        <div class="progress-bar-glow"></div>
                    }
                </div>
            </div>
        </div>
        @if (!string.IsNullOrEmpty(SubLabel))
        {
            <div class="progress-sub-label">@SubLabel</div>
        }
    </div>
}

@code {
    [Parameter] public bool IsVisible { get; set; } = true;
    [Parameter] public double Value { get; set; } = 0; // 0-100
    [Parameter] public string Size { get; set; } = "Medium"; // Small, Medium, Large
    [Parameter] public string Color { get; set; } = "primary"; // primary, success, warning, danger
    [Parameter] public string Label { get; set; } = "";
    [Parameter] public string SubLabel { get; set; } = "";
    [Parameter] public bool ShowPercentage { get; set; } = true;
    [Parameter] public bool Animated { get; set; } = true;
    [Parameter] public bool Striped { get; set; } = false;

    protected override void OnParametersSet()
    {
        // Clamp value between 0 and 100
        Value = Math.Max(0, Math.Min(100, Value));
    }
}

<style>
    .progress-container {
        width: 100%;
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

    .progress-label {
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-size: 0.875rem;
        font-weight: 500;
        color: var(--stadium-gray-700);
    }

    .progress-container.small .progress-label {
        font-size: 0.8125rem;
    }

    .progress-container.large .progress-label {
        font-size: 1rem;
    }

    .progress-percentage {
        color: var(--stadium-gray-500);
        font-variant-numeric: tabular-nums;
    }

    .progress-bar-container {
        position: relative;
    }

    .progress-bar-track {
        width: 100%;
        height: 8px;
        background: var(--stadium-gray-200);
        border-radius: 4px;
        overflow: hidden;
        box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
    }

    .progress-container.small .progress-bar-track {
        height: 4px;
        border-radius: 2px;
    }

    .progress-container.large .progress-bar-track {
        height: 12px;
        border-radius: 6px;
    }

    .progress-bar-fill {
        height: 100%;
        border-radius: inherit;
        transition: width 0.4s ease;
        position: relative;
        background: linear-gradient(90deg, var(--stadium-primary) 0%, var(--stadium-primary-light) 100%);
    }

    .progress-bar-fill.success {
        background: linear-gradient(90deg, var(--stadium-success) 0%, #16a34a 100%);
    }

    .progress-bar-fill.warning {
        background: linear-gradient(90deg, var(--stadium-warning) 0%, #ea580c 100%);
    }

    .progress-bar-fill.danger {
        background: linear-gradient(90deg, var(--stadium-danger) 0%, #dc2626 100%);
    }

    .progress-bar-glow {
        position: absolute;
        top: 0;
        right: -6px;
        width: 6px;
        height: 100%;
        background: linear-gradient(90deg, transparent 0%, rgba(255, 255, 255, 0.6) 50%, transparent 100%);
        animation: progress-glow 2s ease-in-out infinite;
    }

    @@keyframes progress-glow {
        0% {
            transform: translateX(-100%);
            opacity: 0;
        }
        50% {
            opacity: 1;
        }
        100% {
            transform: translateX(100%);
            opacity: 0;
        }
    }

    .progress-sub-label {
        font-size: 0.75rem;
        color: var(--stadium-gray-500);
        text-align: center;
    }

    .progress-container.small .progress-sub-label {
        font-size: 0.6875rem;
    }

    .progress-container.large .progress-sub-label {
        font-size: 0.8125rem;
    }

    /* Striped variant */
    .progress-bar-fill[data-striped="true"] {
        background-image: linear-gradient(
            45deg,
            rgba(255, 255, 255, 0.15) 25%,
            transparent 25%,
            transparent 50%,
            rgba(255, 255, 255, 0.15) 50%,
            rgba(255, 255, 255, 0.15) 75%,
            transparent 75%,
            transparent
        );
        background-size: 20px 20px;
        animation: progress-stripes 1s linear infinite;
    }

    @@keyframes progress-stripes {
        0% {
            background-position: 0 0;
        }
        100% {
            background-position: 20px 0;
        }
    }

    /* Mobile optimizations */
    @@media (max-width: 768px) {
        .progress-label {
            font-size: 0.8125rem;
        }

        .progress-percentage {
            font-size: 0.75rem;
        }
    }

    /* Accessibility */
    @@media (prefers-reduced-motion: reduce) {
        .progress-bar-fill,
        .progress-bar-glow,
        .progress-bar-fill[data-striped="true"] {
            animation: none;
            transition: none;
        }
    }
</style>