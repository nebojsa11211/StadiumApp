@page "/tickets"

<PageTitle>Tickets Management</PageTitle>

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col">
            <h1>Tickets Management</h1>
            @if (selectedEventId.HasValue && events != null)
            {
                var selectedEvent = events.FirstOrDefault(e => e.Id == selectedEventId.Value);
                if (selectedEvent != null)
                {
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="/events">Events</a></li>
                            <li class="breadcrumb-item active" aria-current="page">@selectedEvent.Name Tickets</li>
                        </ol>
                    </nav>
                    <div class="alert alert-info">
                        <i class="bi bi-info-circle"></i> Showing tickets for: <strong>@selectedEvent.Name</strong> (@selectedEvent.Date?.ToString("MMM dd, yyyy"))
                    </div>
                }
            }
        </div>
    </div>

    @if (isLoading)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @errorMessage
        </div>
    }
    else
    {
        <div class="row mb-3">
            <div class="col-md-4">
                <label class="form-label">Filter by Event</label>
                <select class="form-select" @onchange="@(async (e) => await FilterByEvent(e.Value?.ToString()))" value="@(selectedEventId?.ToString() ?? "")">
                    <option value="">All Events</option>
                    @if (events != null)
                    {
                        @foreach (var evt in events)
                        {
                            <option value="@evt.Id" selected="@(selectedEventId == evt.Id)">@evt.Name - @evt.Date?.ToString("MMM dd, yyyy")</option>
                        }
                    }
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label">Filter by Status</label>
                <select class="form-select" @onchange="@(async (e) => await FilterByStatus(e.Value?.ToString()))">
                    <option value="">All Tickets</option>
                    <option value="true">Active</option>
                    <option value="false">Inactive</option>
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label">Search</label>
                <input type="text" class="form-control" placeholder="Search by ticket #, customer..." 
                       @bind="searchTerm" @bind:event="oninput" @onkeyup="@(async () => await SearchTickets())" />
            </div>
            <div class="col-md-2 d-flex align-items-end">
                <button class="btn btn-secondary w-100" @onclick="ResetFilters">
                    <i class="bi bi-arrow-clockwise"></i> Reset
                </button>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col">
                <div class="card">
                    <div class="card-body">
                        <div class="row text-center">
                            <div class="col-md-3">
                                <h5>Total Tickets</h5>
                                <p class="h3">@allTickets?.Count</p>
                            </div>
                            <div class="col-md-3">
                                <h5>Active Tickets</h5>
                                <p class="h3 text-success">@allTickets?.Count(t => t.IsActive)</p>
                            </div>
                            <div class="col-md-3">
                                <h5>Total Revenue</h5>
                                <p class="h3 text-primary">$@allTickets?.Sum(t => t.Price).ToString("F2")</p>
                            </div>
                            <div class="col-md-3">
                                <h5>Unique Events</h5>
                                <p class="h3">@allTickets?.Select(t => t.EventId).Distinct().Count()</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @if (filteredTickets == null || !filteredTickets.Any())
        {
            <div class="alert alert-info">
                No tickets found matching the current filters.
            </div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Ticket #</th>
                            <th>Event</th>
                            <th>Date</th>
                            <th>Seat</th>
                            <th>Customer</th>
                            <th>Purchase Date</th>
                            <th>Price</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var ticket in filteredTickets)
                        {
                            <tr>
                                <td><code>@ticket.TicketNumber</code></td>
                                <td>@ticket.EventName</td>
                                <td>@ticket.EventDate?.ToString("MMM dd, yyyy HH:mm")</td>
                                <td>
                                    @if (!string.IsNullOrEmpty(ticket.Section))
                                    {
                                        <span>@ticket.Section</span>
                                        @if (!string.IsNullOrEmpty(ticket.Row))
                                        {
                                            <span> Row @ticket.Row</span>
                                        }
                                        @if (!string.IsNullOrEmpty(ticket.SeatNumber))
                                        {
                                            <span> Seat @ticket.SeatNumber</span>
                                        }
                                    }
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(ticket.CustomerName))
                                    {
                                        <div>@ticket.CustomerName</div>
                                    }
                                    @if (!string.IsNullOrEmpty(ticket.CustomerEmail))
                                    {
                                        <small class="text-muted">@ticket.CustomerEmail</small>
                                    }
                                </td>
                                <td>@ticket.PurchaseDate?.ToString("MMM dd, yyyy HH:mm")</td>
                                <td>$@ticket.Price.ToString("F2")</td>
                                <td>
                                    @if (ticket.IsActive)
                                    {
                                        <span class="badge bg-success">Active</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">Inactive</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group btn-group-sm" role="group">
                                        @if (ticket.OrderId.HasValue)
                                        {
                                            <button class="btn btn-outline-primary" @onclick="() => ViewOrder(ticket.OrderId.Value)"
                                                    title="View Order">
                                                <i class="bi bi-receipt"></i>
                                            </button>
                                        }
                                        <button class="btn btn-outline-info" @onclick="() => ValidateTicket(ticket.TicketNumber)"
                                                title="Validate">
                                            <i class="bi bi-check-circle"></i>
                                        </button>
                                        @if (ticket.IsActive)
                                        {
                                            <button class="btn btn-outline-warning" @onclick="() => DeactivateTicket(ticket.Id)"
                                                    title="Deactivate">
                                                <i class="bi bi-x-circle"></i>
                                            </button>
                                        }
                                        else
                                        {
                                            <button class="btn btn-outline-success" @onclick="() => ActivateTicket(ticket.Id)"
                                                    title="Activate">
                                                <i class="bi bi-check-circle"></i>
                                            </button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    }
</div>

