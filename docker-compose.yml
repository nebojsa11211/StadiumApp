version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: stadium-sqlserver
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: YourPassword123!
      MSSQL_PID: Express
    ports:
      - "14330:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - stadium-network
    healthcheck:
      test: ["CMD-SHELL", "echo 'health check'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    restart: unless-stopped

  # API Backend
  api:
    build:
      context: .
      dockerfile: StadiumDrinkOrdering.API/Dockerfile
    container_name: stadium-api
    environment:
      - TZ=Europe/Zagreb
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=aws-1-eu-north-1.pooler.supabase.com;Port=6543;Database=postgres;Username=postgres.ylaccqjfrqzruhgbzpnw;Password=d!hZ5A9@t+e!Nn2;SSL Mode=Require;Trust Server Certificate=true;Timeout=60;Command Timeout=300;Keepalive=30;Connection Idle Lifetime=300;Maximum Pool Size=50;Minimum Pool Size=5;Pooling=true;No Reset On Close=true;Include Error Detail=true
      - JwtSettings__SecretKey=YourSuperSecretKeyThatIsAtLeast32CharactersLong!
      - JwtSettings__Issuer=StadiumDrinkOrdering
      - JwtSettings__Audience=StadiumDrinkOrdering
      - ASPNETCORE_URLS=https://+:8443
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8443
      - ASPNETCORE_Kestrel__Certificates__Default__Password=StadiumDev123!
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetcore.pfx
      - DOTNET_RUNNING_IN_CONTAINER=true
    ports:
      - "9010:8443"
      - "9011:8080"
    volumes:
      - api_data:/app/data
      - ./certificates:/https:ro
    networks:
      - stadium-network
    restart: unless-stopped

  # Customer Frontend
  customer:
    build:
      context: .
      dockerfile: StadiumDrinkOrdering.Customer/Dockerfile
    container_name: stadium-customer
    environment:
      - TZ=Europe/Zagreb
      - ASPNETCORE_ENVIRONMENT=Development
      - ApiSettings__BaseUrl=https://api:8443/
      - ASPNETCORE_URLS=https://+:8444
      - ASPNETCORE_HTTP_PORTS=8081
      - ASPNETCORE_HTTPS_PORTS=8444
      - ASPNETCORE_Kestrel__Certificates__Default__Password=StadiumDev123!
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetcore.pfx
      - DOTNET_RUNNING_IN_CONTAINER=true
    ports:
      - "9020:8444"
      - "9021:8081"
    volumes:
      - ./certificates:/https:ro
    depends_on:
      - api
    networks:
      - stadium-network
    restart: unless-stopped

  # Admin Frontend
  admin:
    build:
      context: .
      dockerfile: StadiumDrinkOrdering.Admin/Dockerfile
    container_name: stadium-admin
    environment:
      - TZ=Europe/Zagreb
      - ASPNETCORE_ENVIRONMENT=Development
      - ApiSettings__BaseUrl=https://api:8443/
      - ASPNETCORE_URLS=https://+:8445
      - ASPNETCORE_HTTP_PORTS=8082
      - ASPNETCORE_HTTPS_PORTS=8445
      - ASPNETCORE_Kestrel__Certificates__Default__Password=StadiumDev123!
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetcore.pfx
      - DOTNET_RUNNING_IN_CONTAINER=true
    ports:
      - "9030:8445"
      - "9031:8082"
    volumes:
      - ./certificates:/https:ro
    depends_on:
      - api
    networks:
      - stadium-network
    restart: unless-stopped

  # Staff Frontend
  staff:
    build:
      context: .
      dockerfile: StadiumDrinkOrdering.Staff/Dockerfile
    container_name: stadium-staff
    environment:
      - TZ=Europe/Zagreb
      - ASPNETCORE_ENVIRONMENT=Development
      - ApiSettings__BaseUrl=https://api:8443/
      - ASPNETCORE_URLS=https://+:8446
      - ASPNETCORE_HTTP_PORTS=8083
      - ASPNETCORE_HTTPS_PORTS=8446
      - ASPNETCORE_Kestrel__Certificates__Default__Password=StadiumDev123!
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetcore.pfx
      - DOTNET_RUNNING_IN_CONTAINER=true
    ports:
      - "9040:8446"
      - "9041:8083"
    volumes:
      - ./certificates:/https:ro
    depends_on:
      - api
    networks:
      - stadium-network
    restart: unless-stopped

# Networks
networks:
  stadium-network:
    driver: bridge
    name: stadium-network

# Volumes
volumes:
  sqlserver_data:
    driver: local
    name: stadium-sqlserver-data
  api_data:
    driver: local
    name: stadium-api-data
