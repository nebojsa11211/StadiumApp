services:
  # API Backend
  api:
    build:
      context: .
      dockerfile: StadiumDrinkOrdering.API/Dockerfile
    container_name: stadium-api
    environment:
      - TZ=${TZ:-Europe/Zagreb}
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - ConnectionStrings__DefaultConnection=${DB_CONNECTION_STRING}
      - JwtSettings__SecretKey=${JWT_SECRET_KEY}
      - JwtSettings__Issuer=${JWT_ISSUER:-StadiumDrinkOrdering}
      - JwtSettings__Audience=${JWT_AUDIENCE:-StadiumDrinkOrdering}
      - ASPNETCORE_URLS=https://+:8443
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8443
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${SSL_CERT_PASSWORD}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetcore.pfx
      - DOTNET_RUNNING_IN_CONTAINER=true
      - Logging__LogLevel__Default=${LOG_LEVEL_DEFAULT:-Information}
      - Logging__LogLevel__Microsoft.AspNetCore=${LOG_LEVEL_ASPNETCORE:-Information}
    ports:
      - "9010:8443"
      - "9011:8080"
    volumes:
      - ./certificates:/https:ro
    networks:
      - stadium-network
    restart: unless-stopped

  # Admin Frontend
  admin:
    build:
      context: .
      dockerfile: StadiumDrinkOrdering.Admin/Dockerfile
    container_name: stadium-admin
    environment:
      - TZ=${TZ:-Europe/Zagreb}
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - ApiSettings__BaseUrl=${API_BASE_URL:-https://api:8443/}
      - ASPNETCORE_URLS=https://+:8445
      - ASPNETCORE_HTTP_PORTS=8082
      - ASPNETCORE_HTTPS_PORTS=8445
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${SSL_CERT_PASSWORD}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetcore.pfx
      - DOTNET_RUNNING_IN_CONTAINER=true
      - Logging__LogLevel__Default=${LOG_LEVEL_DEFAULT:-Information}
      - Logging__LogLevel__Microsoft.AspNetCore=${LOG_LEVEL_ASPNETCORE:-Information}
    ports:
      - "9030:8445"
      - "9031:8082"
    volumes:
      - ./certificates:/https:ro
    depends_on:
      - api
    networks:
      - stadium-network
    restart: unless-stopped

# Networks
networks:
  stadium-network:
    driver: bridge
    name: stadium-network

# No volumes needed - using PostgreSQL/Supabase (cloud database)
