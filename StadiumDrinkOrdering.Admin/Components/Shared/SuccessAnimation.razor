@inherits SuccessAnimationBase

@if (IsVisible)
{
    <div class="success-animation-container @(Overlay ? "success-overlay" : "")">
        <div class="success-animation @Size.ToLower()">
            <div class="success-icon">
                <svg viewBox="0 0 52 52" class="success-svg">
                    <circle cx="26" cy="26" r="25" fill="none" class="success-circle"/>
                    <path fill="none" d="M14,27 l7.5,7.5 L38,18" class="success-check"/>
                </svg>
            </div>
            @if (!string.IsNullOrEmpty(Message))
            {
                <div class="success-message">@Message</div>
            }
            @if (!string.IsNullOrEmpty(SubMessage))
            {
                <div class="success-sub-message">@SubMessage</div>
            }
        </div>
    </div>
}

@code {
    [Parameter] public bool IsVisible { get; set; } = true;
    [Parameter] public bool Overlay { get; set; } = false;
    [Parameter] public string Size { get; set; } = "Medium"; // Small, Medium, Large
    [Parameter] public string Message { get; set; } = "Success!";
    [Parameter] public string SubMessage { get; set; } = "";
    [Parameter] public int AutoHideDelay { get; set; } = 3000;
    [Parameter] public EventCallback OnAnimationComplete { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (IsVisible && AutoHideDelay > 0)
        {
            await Task.Delay(AutoHideDelay);
            IsVisible = false;
            await OnAnimationComplete.InvokeAsync();
            StateHasChanged();
        }
    }
}

<style>
    .success-animation-container {
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        animation: slideUp 0.4s ease-out;
    }

    .success-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(8px);
        z-index: 9999;
    }

    .success-animation {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 1.5rem;
        padding: 2rem;
        text-align: center;
    }

    .success-icon {
        width: 80px;
        height: 80px;
    }

    .success-animation.small .success-icon {
        width: 60px;
        height: 60px;
    }

    .success-animation.large .success-icon {
        width: 100px;
        height: 100px;
    }

    .success-svg {
        width: 100%;
        height: 100%;
        border-radius: 50%;
    }

    .success-circle {
        stroke: var(--stadium-success);
        stroke-width: 2;
        stroke-miterlimit: 10;
        stroke-dasharray: 166;
        stroke-dashoffset: 166;
        fill: none;
        animation: stroke-success 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;
    }

    .success-check {
        transform-origin: 50% 50%;
        stroke-dasharray: 48;
        stroke-dashoffset: 48;
        stroke: var(--stadium-success);
        stroke-width: 3;
        stroke-linecap: round;
        animation: stroke-success 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards;
    }

    @@keyframes stroke-success {
        100% {
            stroke-dashoffset: 0;
        }
    }

    .success-message {
        font-size: 1.5rem;
        font-weight: 600;
        color: var(--stadium-success);
        margin: 0;
        animation: fadeInUp 0.4s ease-out 0.4s both;
    }

    .success-sub-message {
        font-size: 1rem;
        color: var(--stadium-gray-600);
        margin: 0;
        animation: fadeInUp 0.4s ease-out 0.6s both;
    }

    .success-animation.small .success-message {
        font-size: 1.25rem;
    }

    .success-animation.small .success-sub-message {
        font-size: 0.875rem;
    }

    .success-animation.large .success-message {
        font-size: 1.75rem;
    }

    .success-animation.large .success-sub-message {
        font-size: 1.125rem;
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes slideUp {
        from {
            opacity: 0;
            transform: translateY(30px) scale(0.95);
        }
        to {
            opacity: 1;
            transform: translateY(0) scale(1);
        }
    }

    /* Mobile optimizations */
    @@media (max-width: 768px) {
        .success-animation {
            gap: 1rem;
            padding: 1.5rem;
        }

        .success-icon {
            width: 60px;
            height: 60px;
        }

        .success-message {
            font-size: 1.25rem;
        }

        .success-sub-message {
            font-size: 0.875rem;
        }
    }
</style>